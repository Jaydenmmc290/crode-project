{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jayde\\\\Downloads\\\\crode_project\\\\crode-project\\\\frontend\\\\src\\\\AddOpportunity.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport api from './api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PostOpportunity() {\n  _s();\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const token = localStorage.getItem(\"token\");\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!token) {\n      alert(\"You must be logged in to post.\");\n      return;\n    }\n    try {\n      await axios.post(\"http://127.0.0.1:8000/api/opportunities/\", {\n        title,\n        description\n      }, {\n        headers: {\n          Authorization: `Token ${token}`\n        }\n      });\n      alert(\"Opportunity posted!\");\n      setTitle('');\n      setDescription('');\n    } catch (err) {\n      console.error(\"Post failed:\", err);\n      alert(\"Post failed — are you logged in?\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      placeholder: \"Title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: description,\n      onChange: e => setDescription(e.target.value),\n      placeholder: \"Description\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(PostOpportunity, \"1UKQWTfo2RWmkwPNsekAdQbvqFk=\");\n_c = PostOpportunity;\nexport default PostOpportunity;\nvar _c;\n$RefreshReg$(_c, \"PostOpportunity\");","map":{"version":3,"names":["React","useState","axios","api","jsxDEV","_jsxDEV","PostOpportunity","_s","title","setTitle","description","setDescription","token","localStorage","getItem","handleSubmit","e","preventDefault","alert","post","headers","Authorization","err","console","error","onSubmit","children","type","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/jayde/Downloads/crode_project/crode-project/frontend/src/AddOpportunity.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport api from './api';\r\n\r\nfunction PostOpportunity() {\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!token) {\r\n      alert(\"You must be logged in to post.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await axios.post(\"http://127.0.0.1:8000/api/opportunities/\", {\r\n        title,\r\n        description\r\n      }, {\r\n        headers: {\r\n          Authorization: `Token ${token}`\r\n        }\r\n      });\r\n      alert(\"Opportunity posted!\");\r\n      setTitle('');\r\n      setDescription('');\r\n    } catch (err) {\r\n      console.error(\"Post failed:\", err);\r\n      alert(\"Post failed — are you logged in?\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"text\" value={title} onChange={(e) => setTitle(e.target.value)} placeholder=\"Title\" />\r\n      <textarea value={description} onChange={(e) => setDescription(e.target.value)} placeholder=\"Description\" />\r\n      <button type=\"submit\">Post</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default PostOpportunity;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,GAAG,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAMW,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAE3C,MAAMC,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAACL,KAAK,EAAE;MACVM,KAAK,CAAC,gCAAgC,CAAC;MACvC;IACF;IAEA,IAAI;MACF,MAAMhB,KAAK,CAACiB,IAAI,CAAC,0CAA0C,EAAE;QAC3DX,KAAK;QACLE;MACF,CAAC,EAAE;QACDU,OAAO,EAAE;UACPC,aAAa,EAAE,SAAST,KAAK;QAC/B;MACF,CAAC,CAAC;MACFM,KAAK,CAAC,qBAAqB,CAAC;MAC5BT,QAAQ,CAAC,EAAE,CAAC;MACZE,cAAc,CAAC,EAAE,CAAC;IACpB,CAAC,CAAC,OAAOW,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,cAAc,EAAEF,GAAG,CAAC;MAClCJ,KAAK,CAAC,kCAAkC,CAAC;IAC3C;EACF,CAAC;EAED,oBACEb,OAAA;IAAMoB,QAAQ,EAAEV,YAAa;IAAAW,QAAA,gBAC3BrB,OAAA;MAAOsB,IAAI,EAAC,MAAM;MAACC,KAAK,EAAEpB,KAAM;MAACqB,QAAQ,EAAGb,CAAC,IAAKP,QAAQ,CAACO,CAAC,CAACc,MAAM,CAACF,KAAK,CAAE;MAACG,WAAW,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClG9B,OAAA;MAAUuB,KAAK,EAAElB,WAAY;MAACmB,QAAQ,EAAGb,CAAC,IAAKL,cAAc,CAACK,CAAC,CAACc,MAAM,CAACF,KAAK,CAAE;MAACG,WAAW,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC3G9B,OAAA;MAAQsB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAI;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/B,CAAC;AAEX;AAAC5B,EAAA,CArCQD,eAAe;AAAA8B,EAAA,GAAf9B,eAAe;AAuCxB,eAAeA,eAAe;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}